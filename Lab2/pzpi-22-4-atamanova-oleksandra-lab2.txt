Харківський університет радіоелектроніки
Факультет комп'ютерних наук
Кафедра програмної інженерії

ЗВІТ
з лабораторної роботи №2
з дисципліни «Архітектура програмного забезпечення»
на тему: «Мобільний застосунок»

Виконала ст. гр. ПЗПІ-22-4
Атаманова Олександра Петрівна

Перевірив
асистент кафедри ПІ
Дашенков Дмитро Сергійович 

Харків 2025
1 ВСТУП

1.1	Назва системи
Програмна система для управління та автоматизації дистанційних замовлень у магазині світлодіодної продукції.

1.2 Мета роботи
Метою лабораторної роботи є набуття практичних навичок розробки мобільного програмного застосунку для сучасної мобільної платформи Android з використанням відповідної технологій Kotlin. У рамках роботи необхідно створити мобільний застосунок, який є частиною програмної системи та взаємодіє з іншими її компонентами через мережу.

1.3 Завдання
1.	Реалізація мобільного застосунку:
	Створення основних екранів (каталог, замовлення, профіль, сповіщення).
	Реалізація взаємодії з серверною частиною через API (авторизація, отримання та створення замовлень, робота з профілем).
	Додавання локальних сповіщень та збереження даних користувача.
2.	Описати прийняті інженерні рішення.
3.	Побудувати UML-діаграми для опису архітектури та взаємодії компонентів.

1.4 Посилання на GitHub
https://github.com/NureAtamanovaOleksandra/apz-pzpi-22-4-atamanova-oleksandra/tree/main/Lab2

2 ОПИС ПРИЙНЯТИХ ІНЖЕНЕРНИХ РІШЕНЬ

Мобільний застосунок є складовою програмної системи для управління та автоматизації дистанційних замовлень у магазині світлодіодної продукції. Головне призначення застосунку — надати користувачам зручний доступ до асортименту товарів, оформлення замовлень, перегляду історії покупок, отримання сповіщень та входу до особистого профілю за допомогою мобільного пристрою.

Основні можливості:
-	Реєстрація та вхід користувача через REST API.
-	Перегляд каталогу світлодіодної продукції з детальною інформацією про кожен товар.
-	Додавання товарів до кошика та оформлення онлайн-замовлення.
-	Перегляд історії власних замовлень із відображенням деталей кожного замовлення.
-	Отримання локальних сповіщень про ключові події (реєстрація, вхід, створення замовлення).

Використані технології:
-	Мова програмування: Kotlin
-	Архітектурний підхід: Jetpack Compose (Single Activity)
-	Основні бібліотеки:
-	Retrofit для взаємодії з REST API
-	Jetpack Compose для створення інтерфейсу користувача
-	Gson для роботи з JSON-даними
-	SharedPreferences для локального збереження даних та сповіщень


2.2 UML-діаграми
1. UML-діаграма прецедентів (Use Case Diagram)
Діаграма прецедентів показує основні сценарії використання мобільного застосунку.
Опис:
1) Актори:
а) Користувач: взаємодіє із застосунком через інтерфейс.
2) Прецеденти:
а) Реєстрація / Вхід
б) Перегляд каталогу товарів
в) Додавання товару до кошика
г) Оформлення замовлення
д) Перегляд історії замовлень
ж) Отримання сповіщень

 
Рисунок 2.2.1 – UML-діаграма прецедентів (Use Case Diagram)

2. UML-діаграма компонент (Component Diagram)
Діаграма компонент показує архітектуру мобільного застосунку та його взаємодію з іншими частинами системи.


Опис компонентів:
-	ProfileScreen — екран перегляду та редагування профілю користувача.
-	CatalogScreen — екран перегляду каталогу світлодіодної продукції.
-	CreateOrderScreen — екран створення та оформлення замовлення.
-	OrdersScreen — екран перегляду історії замовлень.
-	NotificationsScreen — екран перегляду сповіщень.
-	UI Components — спільні компоненти інтерфейсу користувача.
-	BottomNavigationBar — нижня панель навігації.
-	PrefsUtils — утиліти для роботи з локальним збереженням даних (SharedPreferences).
-	RetrofitClient — клієнт для взаємодії з REST API.
-	REST API — серверна частина для обробки запитів застосунку.
 
Рисунок 2.2.2 – UML-діаграма компонентів (Component Diagram)

3. UML-діаграма діяльності (Activity Diagram)
Діаграма діяльності показує основний процес роботи мобільного застосунку.
	Опис:
1.	Користувач запускає мобільний застосунок для магазину світлодіодної продукції.
2.	Застосунок перевіряє, чи користувач авторизований.
3.	Якщо користувач авторизований, застосунок завантажує необхідні дані з серверу та відображає головне меню з доступом до основних розділів: каталог товарів, створення замовлення, історія замовлень, сповіщення та профіль.
4.	Якщо користувач не авторизований, йому пропонується виконати вхід або реєстрацію.
5.	Після успішної авторизації користувач може переглядати каталог товарів, створювати замовлення, переглядати історію своїх замовлень, переглядати сповіщення та профіль.

Рисунок 2.2.3 – UML-діаграма діяльності (Activity Diagram)

2.4 ER-модель даних (Entity–Relationship Model)
ER-модель описує структуру даних, які використовуються у мобільному застосунку.
Опис:
1) Сутності:
а) Користувач (User): зберігає інформацію про користувачів застосунку.
б) Товар (Product): містить дані про світлодіодну продукцію.
в) Замовлення (Order): містить інформацію про оформлені замовлення.
г) Позиція замовлення (OrderItem): містить інформацію про товари у складі замовлення.
д) Сповіщення (Notification): містить локальні сповіщення для користувача.
2) Зв’язки:
а) Один користувач може мати багато замовлень.
б) Одне замовлення може містити багато позицій замовлення.
в) Одна позиція замовлення пов’язана з одним товаром.
г) Один користувач може мати багато сповіщень.

Рисунок 2.2.4 – ER-модель даних (Entity–Relationship Model)

2.3 Інженерні рішення
1. Архітектура
Для реалізації мобільного застосунку було використано архітектуру з єдиною активністю та розділенням на екрани (Screen), що спрощує навігацію та підтримку коду. Основна логіка розміщена у відповідних composable-функціях для кожного екрану.
2. Взаємодія з сервером
Обмін даними із серверною частиною здійснюється за допомогою бібліотеки Retrofit, яка забезпечує зручну роботу з REST API, обробку HTTP-запитів та відповідей у форматі JSON.
3. Інтерфейс
Графічний інтерфейс застосунку реалізовано з використанням Jetpack Compose, що дозволяє створювати гнучкий, сучасний та реактивний UI з мінімальними зусиллями та високою швидкістю розробки.

2.4 Скріншоти мобільного додатку
   
Рисунок 1 – Вигляд усіх вкладок без авторизації
 
Рисунок 2 – Вигляд відображення помилок

Рисунок 3 – Приклад успішної реєстрації і логіну
    
Рисунок 4 – Вигляд вкладок нового користувача

Рисунок 5 – Вигляд вкладок при додаванні товару в корзину, створення замовлення та сповіщень щодо цього

ВИСНОВКИ

В ході виконання лабораторної роботи було створено мобільний застосунок для системи управління та автоматизації дистанційних замовлень у магазині світлодіодної продукції. Застосунок успішно взаємодіє з серверною частиною через REST API, що дозволяє користувачам проходити авторизацію, переглядати каталог товарів, оформлювати замовлення, переглядати історію покупок та отримувати сповіщення про основні події.
Архітектура застосунку побудована на основі єдиної активності з використанням Jetpack Compose для створення сучасного та зручного інтерфейсу користувача. Для обміну даними із сервером застосовано бібліотеку Retrofit, а для локального збереження даних — SharedPreferences.
У звіті наведено опис прийнятих інженерних рішень, взаємодії основних компонентів застосунку, а також представлено UML-діаграми прецедентів, компонентів, діяльності та ER-модель даних, що дозволило детально проаналізувати архітектуру та логіку роботи системи. Весь програмний код було розміщено на GitHub. Отримані результати підкреслюють важливість структурованого підходу до розробки, дотримання вимог та інтеграції з іншими частинами системи для досягнення поставлених цілей.